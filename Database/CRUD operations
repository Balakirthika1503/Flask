import os
from flask import Flask,render_template,url_for,redirect
from db import Addform,Delform,Addowner
from flask_sqlalchemy import SQLAlchemy
from flask_migrate import Migrate

app=Flask(__name__)

app.config['SECRET_KEY']='mysecret'

basedir=os.path.abspath(os.path.dirname(__file__))

app.config['SQLALCHEMY_DATABASE_URI']='sqlite:///'+os.path.join(basedir,'data.sqlite')
app.config['SQLALCHEMY_TRACK_MODIFICATIONS']=False

db=SQLAlchemy(app)

Migrate(app,db)

class puppy(db.Model):
    __tablename__='puppies'

    id=db.Column(db.Integer,primary_key=True)
    puppy_name=db.Column(db.Text)
    owner=db.relationship('Owner',backref='puppy',uselist=False)

    def __init__(self,puppy_name):
        self.puppy_name=puppy_name

    def __repr__(self):

        if self.owner:
            return f"puppy name {self.puppy_name} and owner is {self.owner.owner_name}"
        else:
            return f"puppy name is {self.puppy_name} and owner is not assigned "


class Owner(db.Model):
    __tablename__='owners'
    
    owner_name=db.Column(db.Text)
    id=db.Column(db.Integer,primary_key=True)
    pup_id=db.Column(db.Integer,db.ForeignKey('puppies.id'))


    def __init__(self,owner_name,pup_id):
        self.owner_name=owner_name
        self.pup_id=pup_id

    def __repr__(self):
        return f'owner name is {self.owner_name}'

@app.route('/')

def index():
    return render_template('index.html')

@app.route('/add',methods=['GET','POST'])

def add_pup():
    form=Addform()

    if form.validate_on_submit():
        name=form.name.data

        new_pup=puppy(name)
        db.session.add(new_pup)
        db.session.commit()
        return redirect(url_for('list_pup'))

    return render_template('add.html',form=form)

@app.route('/list')
def list_pup():

    puppies=puppy.query.all()
    name=puppy.query.all()
    return render_template('list.html', puppies=puppies)

@app.route('/del_pup',methods=['GET','POST'])
def del_pup():
    form=Delform()
    if form.validate_on_submit():
        id=form.id.data
        del_p=puppy.query.get(id)
        db.session.delete(del_p)
        db.session.commit()

        return redirect(url_for('list_pup'))

    return render_template('del_pup.html',form=form)


@app.route('/owners',methods=['GET','POST'])
def add_owner():
    form=Addowner()


    if form.validate_on_submit():
    

        owner_name=form.name.data
        pupp_id=form.pup_id.data
        new_owner=Owner(owner_name,pupp_id)
        db.session.add(new_owner)
        db.session.commit()

        return redirect(url_for('list_pup'))
    return render_template('owner.html', form=form)

if __name__=='__main__':
    app.run(debug=True)



